jazzzfm@jazzzfm [23:55:45] [~/Documents/JazzDataSolutions/SaptivaTekChallenge] [main *]
-> % # 0) Asegura sandbox escribible para tests
export TEST_TMP_DIR="$(mktemp -d)"

# 1) Linter (ahora con config limpia)
ruff check . --fix

# 2) Type-check
mypy . --python-version=3.11

# 3) Tests
pytest -q

F811 Redefinition of unused `CORSMiddleware` from line 9
  --> api/main.py:9:37
   |
 8 | from fastapi import Depends, FastAPI, HTTPException, Query, Request
 9 | from fastapi.middleware.cors import CORSMiddleware
   |                                     -------------- previous definition of `CORSMiddleware` here
10 | from fastapi.middleware.trustedhost import TrustedHostMiddleware
11 | from fastapi.responses import JSONResponse
12 | from pydantic import BaseModel, Field, field_validator
13 | from starlette.middleware.cors import CORSMiddleware
   |                                       ^^^^^^^^^^^^^^ `CORSMiddleware` redefined here
14 | from starlette.middleware.trustedhost import TrustedHostMiddleware
   |
help: Remove definition: `CORSMiddleware`

F811 Redefinition of unused `TrustedHostMiddleware` from line 10
  --> api/main.py:10:44
   |
 8 | from fastapi import Depends, FastAPI, HTTPException, Query, Request
 9 | from fastapi.middleware.cors import CORSMiddleware
10 | from fastapi.middleware.trustedhost import TrustedHostMiddleware
   |                                            --------------------- previous definition of `TrustedHostMiddleware` here
11 | from fastapi.responses import JSONResponse
12 | from pydantic import BaseModel, Field, field_validator
13 | from starlette.middleware.cors import CORSMiddleware
14 | from starlette.middleware.trustedhost import TrustedHostMiddleware
   |                                              ^^^^^^^^^^^^^^^^^^^^^ `TrustedHostMiddleware` redefined here
15 |
16 | from core.container import get_create_prompt_use_case, get_search_similar_use_case
   |
help: Remove definition: `TrustedHostMiddleware`

F821 Undefined name `settings`
  --> api/main.py:36:20
   |
36 | _ensure_sqlite_dir(settings.database_url)
   |                    ^^^^^^^^
37 | settings = Settings()
38 | app = FastAPI(
   |

E501 Line too long (130 > 120)
  --> api/main.py:55:121
   |
53 | app.add_middleware(
54 |     TrustedHostMiddleware, 
55 |     allowed_hosts=["localhost", "127.0.0.1", "*.example.com", "testserver"]  # Configure as needed, including testserver for tests
   |                                                                                                                         ^^^^^^^^^^
56 | )
   |

F821 Undefined name `cleanup_container`
   --> api/main.py:99:17
    |
 98 | # Register cleanup function
 99 | atexit.register(cleanup_container)
    |                 ^^^^^^^^^^^^^^^^^
100 |
101 | # Dependencies using DI container
    |

F811 Redefinition of unused `get_create_prompt_use_case` from line 16
   --> api/main.py:102:5
    |
101 | # Dependencies using DI container
102 | def get_create_prompt_use_case() -> CreatePrompt:
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ `get_create_prompt_use_case` redefined here
103 |     container = get_container()
104 |     return container.create_prompt_use_case
    |
   ::: api/main.py:16:28
    |
 14 | from starlette.middleware.trustedhost import TrustedHostMiddleware
 15 |
 16 | from core.container import get_create_prompt_use_case, get_search_similar_use_case
    |                            -------------------------- previous definition of `get_create_prompt_use_case` here
 17 | from core.security import InputValidator, rate_limiter
 18 | from core.settings import Settings
    |
help: Remove definition: `get_create_prompt_use_case`

F821 Undefined name `get_container`
   --> api/main.py:103:17
    |
101 | # Dependencies using DI container
102 | def get_create_prompt_use_case() -> CreatePrompt:
103 |     container = get_container()
    |                 ^^^^^^^^^^^^^
104 |     return container.create_prompt_use_case
    |

F811 Redefinition of unused `get_search_similar_use_case` from line 16
   --> api/main.py:106:5
    |
104 |     return container.create_prompt_use_case
105 |
106 | def get_search_similar_use_case() -> SearchSimilar:
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ `get_search_similar_use_case` redefined here
107 |     container = get_container()
108 |     return container.search_similar_use_case
    |
   ::: api/main.py:16:56
    |
 14 | from starlette.middleware.trustedhost import TrustedHostMiddleware
 15 |
 16 | from core.container import get_create_prompt_use_case, get_search_similar_use_case
    |                                                        --------------------------- previous definition of `get_search_similar_use_case` here
 17 | from core.security import InputValidator, rate_limiter
 18 | from core.settings import Settings
    |
help: Remove definition: `get_search_similar_use_case`

F821 Undefined name `get_container`
   --> api/main.py:107:17
    |
106 | def get_search_similar_use_case() -> SearchSimilar:
107 |     container = get_container()
    |                 ^^^^^^^^^^^^^
108 |     return container.search_similar_use_case
    |

E501 Line too long (126 > 120)
   --> api/main.py:153:121
    |
151 |         raise HTTPException(
152 |             status_code=500,
153 |             detail={"error": "Internal server error", "detail": "An unexpected error occurred", "error_type": "UnknownError"},
    |                                                                                                                         ^^^^^^
154 |         ) from e
    |

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
   --> api/main.py:180:9
    |
178 |           return records
179 |       except ValidationError as e:
180 | /         raise HTTPException(
181 | |             status_code=400,
182 | |             detail={"error": "Validation failed", "detail": str(e), "error_type": "ValidationError"}
183 | |         )
    | |_________^
184 |       except (EmbeddingError, VectorIndexError, RepositoryError) as e:
185 |           logging.error(f"Service error in search_similar: {e}")
    |

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
   --> api/main.py:186:9
    |
184 |       except (EmbeddingError, VectorIndexError, RepositoryError) as e:
185 |           logging.error(f"Service error in search_similar: {e}")
186 | /         raise HTTPException(
187 | |             status_code=500,
188 | |             detail={"error": "Service error", "detail": "Internal processing failed", "error_type": type(e).__name__}
189 | |         )
    | |_________^
190 |       except Exception as e:
191 |           logging.error(f"Unexpected error in search_similar: {e}")
    |

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
   --> api/main.py:192:9
    |
190 |       except Exception as e:
191 |           logging.error(f"Unexpected error in search_similar: {e}")
192 | /         raise HTTPException(
193 | |             status_code=500,
194 | |             detail={"error": "Internal server error", "detail": "An unexpected error occurred", "error_type": "UnknownError"}
195 | |         )
    | |_________^
196 |
197 |   @app.get("/prompts", response_model=PaginatedResponse, responses={
    |

E501 Line too long (125 > 120)
   --> api/main.py:194:121
    |
192 |         raise HTTPException(
193 |             status_code=500,
194 |             detail={"error": "Internal server error", "detail": "An unexpected error occurred", "error_type": "UnknownError"}
    |                                                                                                                         ^^^^^
195 |         )
    |

F821 Undefined name `get_container`
   --> api/main.py:207:21
    |
205 |     """List prompts with pagination."""
206 |     try:
207 |         container = get_container()
    |                     ^^^^^^^^^^^^^
208 |         repo = container.prompt_repository
    |

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
   --> api/main.py:237:9
    |
235 |       except Exception as e:
236 |           logging.error(f"Failed to list prompts: {e}")
237 | /         raise HTTPException(
238 | |             status_code=500,
239 | |             detail={"error": "Internal server error", "detail": "Failed to retrieve prompts", "error_type": "UnknownError"}
240 | |         )
    | |_________^
241 |
242 |   @app.get("/health")
    |

E501 Line too long (123 > 120)
   --> api/main.py:239:121
    |
237 |         raise HTTPException(
238 |             status_code=500,
239 |             detail={"error": "Internal server error", "detail": "Failed to retrieve prompts", "error_type": "UnknownError"}
    |                                                                                                                         ^^^
240 |         )
    |

F821 Undefined name `get_container`
   --> api/main.py:251:21
    |
249 |     """Detailed health check endpoint with comprehensive status checks."""
250 |     try:
251 |         container = get_container()
    |                     ^^^^^^^^^^^^^
252 |         health_status = {"status": "healthy", "service": "prompt-service", "checks": {}}
253 |         overall_healthy = True
    |

E501 Line too long (121 > 120)
   --> api/main.py:272:121
    |
270 |             health_status["checks"]["vector_index"] = {"status": "healthy", "message": "Vector index accessible"}
271 |         except Exception as e:
272 |             health_status["checks"]["vector_index"] = {"status": "unhealthy", "message": f"Vector index error: {str(e)}"}
    |                                                                                                                         ^
273 |             overall_healthy = False
    |

F821 Undefined name `get_container`
   --> api/main.py:316:21
    |
314 |     """Readiness check - service is ready to handle requests."""
315 |     try:
316 |         container = get_container()
    |                     ^^^^^^^^^^^^^
317 |         
318 |         # Check if service has been properly initialized
    |

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
   --> api/main.py:339:9
    |
338 |       except Exception as e:
339 | /         raise HTTPException(
340 | |             status_code=503,
341 | |             detail={
342 | |                 "status": "not_ready",
343 | |                 "service": "prompt-service",
344 | |                 "error": str(e),
345 | |                 "timestamp": time.time()
346 | |             }
347 | |         )
    | |_________^
348 |
349 |   @app.get("/stats")
    |

F821 Undefined name `get_container`
   --> api/main.py:354:21
    |
352 |     try:
353 |         from core.logging import perf_monitor
354 |         container = get_container()
    |                     ^^^^^^^^^^^^^
355 |         
356 |         # Get health information
    |

E501 Line too long (121 > 120)
   --> api/main.py:385:121
    |
383 |                 "rate_limiting_enabled": settings.enable_rate_limiting,
384 |                 "embedding_dim": settings.embedding_dim,
385 |                 "database_url": settings.database_url.split("///")[-1] if "///" in settings.database_url else "in-memory"
    |                                                                                                                         ^
386 |             },
387 |             "timestamp": time.time()
    |

B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
   --> api/main.py:392:9
    |
390 |       except Exception as e:
391 |           logging.error(f"Failed to get stats: {e}")
392 | /         raise HTTPException(
393 | |             status_code=500,
394 | |             detail={
395 | |                 "error": "Failed to retrieve service statistics",
396 | |                 "detail": str(e),
397 | |                 "timestamp": time.time()
398 | |             }
399 | |         )
    | |_________^
    |

F821 Undefined name `metadatas`
  --> infra/chroma_index.py:29:31
   |
27 |             self.collection.add(ids=ids, 
28 |                     embeddings=embeddings, 
29 |                     metadatas=metadatas or [{} for _ in embeddings])
   |                               ^^^^^^^^^
30 |         except Exception as e:
31 |             raise e 
   |

B007 Loop control variable `i` not used within loop body
  --> infra/faiss_index.py:79:21
   |
77 |                 # Filter out invalid indices and return with scores
78 |                 results = []
79 |                 for i, (distance, index) in enumerate(zip(distances[0], indices[0], strict=False)):
   |                     ^
80 |                     if index != -1 and index < len(self.id_map):
81 |                         results.append((self.id_map[index], float(distance)))
   |
help: Rename unused `i` to `_i`

F821 Undefined name `pathlib`
  --> infra/faiss_index.py:91:16
   |
89 |     def _save_index(self):
90 |         """Internal method to save index and id_map. Must be called with lock held."""
91 |         path = pathlib.Path(self.index_path)
   |                ^^^^^^^
92 |         path.parent.mkdir(parents=True, exist_ok=True)
93 |         try:
   |

E501 Line too long (144 > 120)
  --> scripts/clean_pdf_generator.py:81:121
   |
80 | …
81 | …hitecture diagram available in HTML version]', clean_content, flags=re.DOTALL)
   |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^
82 | …
83 | …
   |

E501 Line too long (127 > 120)
   --> scripts/seed_data.py:225:121
    |
223 |     def get_migration_info(self) -> Dict[str, Any]:
224 |         """Get information about the current migration state."""
225 |         vector_path = self.settings.chroma_path if self.settings.vector_backend == "chroma" else self.settings.faiss_index_path
    |                                                                                                                         ^^^^^^^
226 |         return {
227 |             "database_url": self.settings.db_url,
    |

E501 Line too long (155 > 120)
  --> scripts/simple_pdf_generator.py:69:121
   |
67 | …
68 | …
69 | …de testing del microservicio de prompts desarrollado como respuesta al reto técnico.
   |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
70 | …
71 | …
   |

E501 Line too long (142 > 120)
   --> scripts/simple_pdf_generator.py:105:121
    |
103 | …nes + inicio
104 | …
105 | …ntación técnica completa disponible en docs/TECHNICAL_DOCUMENTATION.md]\n\n")
    |                                                         ^^^^^^^^^^^^^^^^^^^^^^
106 | …
107 | …
    |

B007 Loop control variable `score` not used within loop body
  --> use_cases/search_similar.py:58:21
   |
56 |             failed_lookups = 0
57 |             
58 |             for id, score in similar_ids:
   |                     ^^^^^
59 |                 try:
60 |                     record = self.prompt_repo.find_by_id(id)
   |
help: Rename unused `score` to `_score`

Found 35 errors (3 fixed, 32 remaining).
No fixes available (2 hidden fixes can be enabled with the `--unsafe-fixes` option).
infra/chroma_index.py:29: error: Name "metadatas" is not defined  [name-defined]
api/main.py:16: error: Module "core.container" has no attribute "get_create_prompt_use_case"  [attr-defined]
api/main.py:16: error: Module "core.container" has no attribute "get_search_similar_use_case"  [attr-defined]
api/main.py:36: error: Cannot determine type of "settings"  [has-type]
api/main.py:36: error: Name "settings" is used before definition  [used-before-def]
api/main.py:99: error: Name "cleanup_container" is not defined  [name-defined]
api/main.py:102: error: Name "get_create_prompt_use_case" already defined (possibly by an import)  [no-redef]
api/main.py:103: error: Name "get_container" is not defined  [name-defined]
api/main.py:106: error: Name "get_search_similar_use_case" already defined (possibly by an import)  [no-redef]
api/main.py:107: error: Name "get_container" is not defined  [name-defined]
api/main.py:207: error: Name "get_container" is not defined  [name-defined]
Found 11 errors in 2 files (checked 38 source files)
ImportError while loading conftest '/home/jazzzfm/Documents/JazzDataSolutions/SaptivaTekChallenge/tests/conftest.py'.
tests/conftest.py:7: in <module>
    from api.main import app
api/main.py:16: in <module>
    from core.container import get_create_prompt_use_case, get_search_similar_use_case
core/container.py:6: in <module>
    from core.config import settings
E   ModuleNotFoundError: No module named 'core.config'
(.venv) 

